import asyncio
from telethon import TelegramClient, events

# –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
api_id = 26735008
api_hash = '6c35a6247e6b6502e5b79173b22af871'
session_name = 'session1'
your_username = 'Andrii_Bilytskyi'  # —Ç–≤–æ–π username –±–µ–∑ @

# –î–∞–Ω–Ω—ã–µ –≤—Ç–æ—Ä–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
api_id_2 = 20903513
api_hash_2 = '0eb01bf47aeac4cbfd89fff140a4e06d'
session_name_2 = 'session2'
your_username_2 = 'UA_DE_22'

# –ì—Ä—É–ø–ø—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
groups_to_monitor = [
    '@NRWanzeigen', '@wuppertal_ua', '@ukraincifrankfurt',
    '@Manner_ClubNRW', '@uahelp_nrw_auto', '@avtoUAeuro', '@deutscheukraine',
    '@ukraineingermany1', '@jobinde', '@hamburg_ukrainians', '@ukrainians_in_germany1',
    '@berlin_ukrainians', '@UkraineinMunich', '@workeuropeplus',
    '@UA_in_Germany', '@dusseldorfukrain', '@TruckingNordrheinWestfalen', '@Berlin_UA2025',
    '@bonn_help', '@Ukrainer_in_Deutschland', '@GermanyTop1', '@germany_chatik',
    '@lifeinde', '@line_DE', '@nrw_anzeige', '@bochum_ua', '@POZITYV_PUTESHESTVIYA',
    '@uahelpkoelnanzeigen', '@cologne_help', '@TheGermany1', '@germania_migranty', '@GLOBUSEXPRESS'
    # –î–æ–±–∞–≤–ª—è–π —Å—é–¥–∞ –≥—Ä—É–ø–ø—ã, –≥–¥–µ —Ç—ã —Ä–µ–∞–ª—å–Ω–æ —Å–æ—Å—Ç–æ–∏—à—å
]

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
keywords = ['–∞–¥–≤–æ–∫–∞—Ç', '—é—Ä–∏—Å—Ç', '–ø—Ä–∞–≤–æ', '–ø–æ–º–æ—â—å –∞–¥–≤–æ–∫–∞—Ç–∞', '–ø–æ–ª–∏—Ü–∏—è','–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–∞', '—Å—É–¥']

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
async def setup_client(api_id, api_hash, session_name, your_username):
    client = TelegramClient(session_name, api_id, api_hash)
    await client.start()

    @client.on(events.NewMessage(chats=groups_to_monitor))
    async def handler(event):
        message_text = event.raw_text.lower()
        if any(keyword in message_text for keyword in keywords):
            try:
                await client.send_message(your_username, f"üîî –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {event.chat.title}:\n\n{event.raw_text}")
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç {session_name}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    return client

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async def main():
    client1 = await setup_client(api_id, api_hash, session_name, your_username)
    client2 = await setup_client(api_id_2, api_hash_2, session_name_2, your_username_2)

    await asyncio.gather(client1.run_until_disconnected(), client2.run_until_disconnected())

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())
